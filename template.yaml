# Este archivo es  la plantilla de CloudFormation aquí se describen todos los recursos de AWS que se van a provisionar a bot
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Bot-ARTF

Globals:
  Function:
    Timeout: 12
    Runtime: python3.9
    MemorySize: 1024
    Architectures:
      - x86_64

# Es importante definir dentro del recurso  Function, los permisos que la función lambda para que la función pueda hacer usos de 
# los servicios de AWS en local no se presentan problemas al omitirlos pero al desplegar la función está  presentará errores en tiempo de ejecución
# En la sección Policies se definen las acciones que podrá realizar la lambda y en cuales recursos los podrá implementar  
Resources:
  PTBFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ptb/
      Handler: ptb_lambda.lambda_handler
      Policies:
          - RekognitionDetectOnlyPolicy: {}
          - Statement:
            - Effect: "Allow"
              Action:
                - ssm:GetParameters
                - ssm:GetParameter
                - ssm:GetParametersByPath
                - dynamodb:*
              Resource:
                - '*'
                - 'arn:aws:ssm:::parameter/telegramartfbot/*'
                - 'arn:aws:dynamodb:::table/counters'
                - 'arn:aws:dynamodb:::table/registros'
      FunctionUrlConfig:
        AuthType: NONE
  # Se configura la tabla que solo se va a encargar de llevar la cuenta de las consultas, se usa esta tabla porque el autoincremento no existe en DynamoDB 
  CountersTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: counters
      AttributeDefinitions:
        - AttributeName: counterName
          AttributeType: S
      KeySchema:
        - AttributeName: counterName
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  # Se configura la tabla que almacenará datos referentes a la consultas 
  RegintersTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: registros
      BillingMode : PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: consulta
          AttributeType: S
        - AttributeName: fecha
          AttributeType: S
      KeySchema:
        - AttributeName: consulta
          KeyType: HASH
        - AttributeName: fecha
          KeyType: RANGE
# Se configura la salida que se obtendrá en la línea de comandos al terminar el despliegue
Outputs:
  TelegramApi:
    Description: "Lambda URL for PTB function"
    # Se configura la salida que se obtendrá en la línea de comandos al terminar el despliegue
    Value:
      Fn::GetAtt: PTBFunctionUrl.FunctionUrl
